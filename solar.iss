; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Solar Gen Calculator"
#define MyAppVersion "1.0.2"
#define MyAppPublisher "JRAG Tech."
#define MyAppExeName "solar.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{8B423781-A48D-4142-BE06-1243B649005C}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={autopf}\{#MyAppName}
UninstallDisplayIcon={app}\{#MyAppExeName}
; "ArchitecturesAllowed=x64compatible" specifies that Setup cannot run
; on anything but x64 and Windows 11 on Arm.
ArchitecturesAllowed=x64compatible
; "ArchitecturesInstallIn64BitMode=x64compatible" requests that the
; install be done in "64-bit mode" on x64 or Windows 11 on Arm,
; meaning it should use the native 64-bit Program Files directory and
; the 64-bit view of the registry.
ArchitecturesInstallIn64BitMode=x64compatible
ChangesAssociations=yes
DisableProgramGroupPage=yes
LicenseFile=D:\python_project\Solar\EULA.txt
InfoBeforeFile=D:\python_project\Solar\readme.txt
; Uncomment the following line to run in non administrative install mode (install for current user only).
;PrivilegesRequired=lowest
OutputDir=C:\Users\user\Desktop
OutputBaseFilename=mysetup
SetupIconFile=D:\python_project\Solar\INFINITY.ico
Password=312924
Encryption=yes
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "D:\python_project\Solar\dist\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\python_project\Solar\dist\load_Sched.csv"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\python_project\Solar\Appliances.csv"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\python_project\Solar\EULA.txt"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\python_project\Solar\INFINITY.ico"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\python_project\Solar\load_Sched.csv"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\python_project\Solar\predefined_values.py"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\python_project\Solar\readme.txt"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\python_project\Solar\solar.iss"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\python_project\Solar\solar.py"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\python_project\Solar\solar.spec"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\python_project\Solar\solarPanel.jpg"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\python_project\Solar\total_load.json"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\python_project\Solar\build\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

